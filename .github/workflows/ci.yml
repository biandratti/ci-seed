name: Continuous Integration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: VirtusLab/scala-cli-setup@v0.2.1
      with:
        jvm: adopt:11
    - name: Check format
      run: sbt checkFormat
    - name: Scalafix Lint
      run: sbt scalafixLint
    - name: Scapegoat Lint
      run: sbt scapegoatLint
    - name: Run tests with coverage Report
      run: sbt testCoverage
#    - uses: codecov/codecov-action@v3
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        fail_ci_if_error: true
    - name: Test coverage report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: target/scala-2.13/coverage-report/cobertura.xml
        format: markdown
        badge: true
        output: both
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          **/target/test-reports/*.xml
    - name: Set badge color
      shell: bash
      run: |
        case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
          success)
            echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
            ;;
          failure)
            echo "BADGE_COLOR=800000" >> $GITHUB_ENV
            ;;
          neutral)
            echo "BADGE_COLOR=696969" >> $GITHUB_ENV
            ;;
        esac
    - name: Create badge
      uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
      with:
        label: Tests
        status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
        color: ${{ env.BADGE_COLOR }}
        path: badge.svg